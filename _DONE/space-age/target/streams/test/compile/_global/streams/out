[0m[[0m[31merror[0m] [0m[0mC:\Users\nicol\Exercism\scala\space-age\src\test\scala\SpaceAgeTest.scala:7:34: overloaded method value should with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (endWithWord: org.scalatest.words.EndWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfEndWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (startWithWord: org.scalatest.words.StartWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfStartWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (includeWord: org.scalatest.words.IncludeWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfIncludeWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notExist: org.scalatest.words.ResultOfNotExist)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (existWord: org.scalatest.words.ExistWord)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (containWord: org.scalatest.words.ContainWord)org.scalatest.words.ResultOfContainWord[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (haveWord: org.scalatest.words.HaveWord)SpaceAgeTest.this.ResultOfHaveWordForExtent[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (beWord: org.scalatest.words.BeWord)SpaceAgeTest.this.ResultOfBeWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[Float])(implicit ev: Numeric[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [U](inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[U])(implicit constraint: org.scalactic.CanEqual[Float,U])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notWord: org.scalatest.words.NotWord)org.scalatest.words.ResultOfNotWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_], TYPECLASS2[_]](rightMatcherFactory2: org.scalatest.matchers.MatcherFactory2[Float,TYPECLASS1,TYPECLASS2])(implicit typeClass1: TYPECLASS1[Float], implicit typeClass2: TYPECLASS2[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_]](rightMatcherFactory1: org.scalatest.matchers.MatcherFactory1[Float,TYPECLASS1])(implicit typeClass1: TYPECLASS1[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (rightMatcherX1: org.scalatest.matchers.Matcher[Float])org.scalatest.Assertion[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (org.scalatest.matchers.Matcher[Double])[0m
[0m[[0m[31merror[0m] [0m[0m    SpaceAge.onEarth(1000000000) should be (31.69 +- 0.01)[0m
[0m[[0m[31merror[0m] [0m[0m                                 ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\nicol\Exercism\scala\space-age\src\test\scala\SpaceAgeTest.scala:12:36: overloaded method value should with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (endWithWord: org.scalatest.words.EndWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfEndWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (startWithWord: org.scalatest.words.StartWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfStartWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (includeWord: org.scalatest.words.IncludeWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfIncludeWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notExist: org.scalatest.words.ResultOfNotExist)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (existWord: org.scalatest.words.ExistWord)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (containWord: org.scalatest.words.ContainWord)org.scalatest.words.ResultOfContainWord[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (haveWord: org.scalatest.words.HaveWord)SpaceAgeTest.this.ResultOfHaveWordForExtent[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (beWord: org.scalatest.words.BeWord)SpaceAgeTest.this.ResultOfBeWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[Float])(implicit ev: Numeric[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [U](inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[U])(implicit constraint: org.scalactic.CanEqual[Float,U])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notWord: org.scalatest.words.NotWord)org.scalatest.words.ResultOfNotWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_], TYPECLASS2[_]](rightMatcherFactory2: org.scalatest.matchers.MatcherFactory2[Float,TYPECLASS1,TYPECLASS2])(implicit typeClass1: TYPECLASS1[Float], implicit typeClass2: TYPECLASS2[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_]](rightMatcherFactory1: org.scalatest.matchers.MatcherFactory1[Float,TYPECLASS1])(implicit typeClass1: TYPECLASS1[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (rightMatcherX1: org.scalatest.matchers.Matcher[Float])org.scalatest.Assertion[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (org.scalatest.matchers.Matcher[Double])[0m
[0m[[0m[31merror[0m] [0m[0m    SpaceAge.onMercury(2134835688) should be (280.88 +- 0.01)[0m
[0m[[0m[31merror[0m] [0m[0m                                   ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\nicol\Exercism\scala\space-age\src\test\scala\SpaceAgeTest.scala:17:33: overloaded method value should with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (endWithWord: org.scalatest.words.EndWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfEndWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (startWithWord: org.scalatest.words.StartWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfStartWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (includeWord: org.scalatest.words.IncludeWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfIncludeWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notExist: org.scalatest.words.ResultOfNotExist)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (existWord: org.scalatest.words.ExistWord)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (containWord: org.scalatest.words.ContainWord)org.scalatest.words.ResultOfContainWord[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (haveWord: org.scalatest.words.HaveWord)SpaceAgeTest.this.ResultOfHaveWordForExtent[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (beWord: org.scalatest.words.BeWord)SpaceAgeTest.this.ResultOfBeWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[Float])(implicit ev: Numeric[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [U](inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[U])(implicit constraint: org.scalactic.CanEqual[Float,U])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notWord: org.scalatest.words.NotWord)org.scalatest.words.ResultOfNotWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_], TYPECLASS2[_]](rightMatcherFactory2: org.scalatest.matchers.MatcherFactory2[Float,TYPECLASS1,TYPECLASS2])(implicit typeClass1: TYPECLASS1[Float], implicit typeClass2: TYPECLASS2[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_]](rightMatcherFactory1: org.scalatest.matchers.MatcherFactory1[Float,TYPECLASS1])(implicit typeClass1: TYPECLASS1[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (rightMatcherX1: org.scalatest.matchers.Matcher[Float])org.scalatest.Assertion[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (org.scalatest.matchers.Matcher[Double])[0m
[0m[[0m[31merror[0m] [0m[0m    SpaceAge.onVenus(189839836) should be (9.78 +- 0.01)[0m
[0m[[0m[31merror[0m] [0m[0m                                ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\nicol\Exercism\scala\space-age\src\test\scala\SpaceAgeTest.scala:22:36: overloaded method value should with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (endWithWord: org.scalatest.words.EndWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfEndWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (startWithWord: org.scalatest.words.StartWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfStartWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (includeWord: org.scalatest.words.IncludeWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfIncludeWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notExist: org.scalatest.words.ResultOfNotExist)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (existWord: org.scalatest.words.ExistWord)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (containWord: org.scalatest.words.ContainWord)org.scalatest.words.ResultOfContainWord[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (haveWord: org.scalatest.words.HaveWord)SpaceAgeTest.this.ResultOfHaveWordForExtent[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (beWord: org.scalatest.words.BeWord)SpaceAgeTest.this.ResultOfBeWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[Float])(implicit ev: Numeric[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [U](inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[U])(implicit constraint: org.scalactic.CanEqual[Float,U])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notWord: org.scalatest.words.NotWord)org.scalatest.words.ResultOfNotWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_], TYPECLASS2[_]](rightMatcherFactory2: org.scalatest.matchers.MatcherFactory2[Float,TYPECLASS1,TYPECLASS2])(implicit typeClass1: TYPECLASS1[Float], implicit typeClass2: TYPECLASS2[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_]](rightMatcherFactory1: org.scalatest.matchers.MatcherFactory1[Float,TYPECLASS1])(implicit typeClass1: TYPECLASS1[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (rightMatcherX1: org.scalatest.matchers.Matcher[Float])org.scalatest.Assertion[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (org.scalatest.matchers.Matcher[Double])[0m
[0m[[0m[31merror[0m] [0m[0m    SpaceAge.onMars(2.329871239E9) should be (39.25 +- 0.01)[0m
[0m[[0m[31merror[0m] [0m[0m                                   ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\nicol\Exercism\scala\space-age\src\test\scala\SpaceAgeTest.scala:27:35: overloaded method value should with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (endWithWord: org.scalatest.words.EndWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfEndWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (startWithWord: org.scalatest.words.StartWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfStartWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (includeWord: org.scalatest.words.IncludeWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfIncludeWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notExist: org.scalatest.words.ResultOfNotExist)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (existWord: org.scalatest.words.ExistWord)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (containWord: org.scalatest.words.ContainWord)org.scalatest.words.ResultOfContainWord[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (haveWord: org.scalatest.words.HaveWord)SpaceAgeTest.this.ResultOfHaveWordForExtent[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (beWord: org.scalatest.words.BeWord)SpaceAgeTest.this.ResultOfBeWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[Float])(implicit ev: Numeric[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [U](inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[U])(implicit constraint: org.scalactic.CanEqual[Float,U])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notWord: org.scalatest.words.NotWord)org.scalatest.words.ResultOfNotWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_], TYPECLASS2[_]](rightMatcherFactory2: org.scalatest.matchers.MatcherFactory2[Float,TYPECLASS1,TYPECLASS2])(implicit typeClass1: TYPECLASS1[Float], implicit typeClass2: TYPECLASS2[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_]](rightMatcherFactory1: org.scalatest.matchers.MatcherFactory1[Float,TYPECLASS1])(implicit typeClass1: TYPECLASS1[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (rightMatcherX1: org.scalatest.matchers.Matcher[Float])org.scalatest.Assertion[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (org.scalatest.matchers.Matcher[Double])[0m
[0m[[0m[31merror[0m] [0m[0m    SpaceAge.onJupiter(901876382) should be (2.41 +- 0.01)[0m
[0m[[0m[31merror[0m] [0m[0m                                  ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\nicol\Exercism\scala\space-age\src\test\scala\SpaceAgeTest.scala:32:30: overloaded method value should with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (endWithWord: org.scalatest.words.EndWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfEndWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (startWithWord: org.scalatest.words.StartWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfStartWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (includeWord: org.scalatest.words.IncludeWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfIncludeWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notExist: org.scalatest.words.ResultOfNotExist)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (existWord: org.scalatest.words.ExistWord)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (containWord: org.scalatest.words.ContainWord)org.scalatest.words.ResultOfContainWord[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (haveWord: org.scalatest.words.HaveWord)SpaceAgeTest.this.ResultOfHaveWordForExtent[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (beWord: org.scalatest.words.BeWord)SpaceAgeTest.this.ResultOfBeWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[Float])(implicit ev: Numeric[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [U](inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[U])(implicit constraint: org.scalactic.CanEqual[Float,U])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notWord: org.scalatest.words.NotWord)org.scalatest.words.ResultOfNotWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_], TYPECLASS2[_]](rightMatcherFactory2: org.scalatest.matchers.MatcherFactory2[Float,TYPECLASS1,TYPECLASS2])(implicit typeClass1: TYPECLASS1[Float], implicit typeClass2: TYPECLASS2[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_]](rightMatcherFactory1: org.scalatest.matchers.MatcherFactory1[Float,TYPECLASS1])(implicit typeClass1: TYPECLASS1[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (rightMatcherX1: org.scalatest.matchers.Matcher[Float])org.scalatest.Assertion[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (org.scalatest.matchers.Matcher[Double])[0m
[0m[[0m[31merror[0m] [0m[0m    SpaceAge.onSaturn(3.0E9) should be (3.23 +- 0.01)[0m
[0m[[0m[31merror[0m] [0m[0m                             ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\nicol\Exercism\scala\space-age\src\test\scala\SpaceAgeTest.scala:37:38: overloaded method value should with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (endWithWord: org.scalatest.words.EndWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfEndWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (startWithWord: org.scalatest.words.StartWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfStartWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (includeWord: org.scalatest.words.IncludeWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfIncludeWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notExist: org.scalatest.words.ResultOfNotExist)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (existWord: org.scalatest.words.ExistWord)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (containWord: org.scalatest.words.ContainWord)org.scalatest.words.ResultOfContainWord[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (haveWord: org.scalatest.words.HaveWord)SpaceAgeTest.this.ResultOfHaveWordForExtent[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (beWord: org.scalatest.words.BeWord)SpaceAgeTest.this.ResultOfBeWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[Float])(implicit ev: Numeric[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [U](inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[U])(implicit constraint: org.scalactic.CanEqual[Float,U])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notWord: org.scalatest.words.NotWord)org.scalatest.words.ResultOfNotWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_], TYPECLASS2[_]](rightMatcherFactory2: org.scalatest.matchers.MatcherFactory2[Float,TYPECLASS1,TYPECLASS2])(implicit typeClass1: TYPECLASS1[Float], implicit typeClass2: TYPECLASS2[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_]](rightMatcherFactory1: org.scalatest.matchers.MatcherFactory1[Float,TYPECLASS1])(implicit typeClass1: TYPECLASS1[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (rightMatcherX1: org.scalatest.matchers.Matcher[Float])org.scalatest.Assertion[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (org.scalatest.matchers.Matcher[Double])[0m
[0m[[0m[31merror[0m] [0m[0m    SpaceAge.onUranus(3.210123456E9) should be (1.21 +- 0.01)[0m
[0m[[0m[31merror[0m] [0m[0m                                     ^[0m
[0m[[0m[31merror[0m] [0m[0mC:\Users\nicol\Exercism\scala\space-age\src\test\scala\SpaceAgeTest.scala:42:39: overloaded method value should with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (endWithWord: org.scalatest.words.EndWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfEndWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (startWithWord: org.scalatest.words.StartWithWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfStartWithWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (includeWord: org.scalatest.words.IncludeWord)(implicit ev: Float <:< String)SpaceAgeTest.this.ResultOfIncludeWordForString <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notExist: org.scalatest.words.ResultOfNotExist)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (existWord: org.scalatest.words.ExistWord)(implicit existence: org.scalatest.enablers.Existence[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (containWord: org.scalatest.words.ContainWord)org.scalatest.words.ResultOfContainWord[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (haveWord: org.scalatest.words.HaveWord)SpaceAgeTest.this.ResultOfHaveWordForExtent[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (beWord: org.scalatest.words.BeWord)SpaceAgeTest.this.ResultOfBeWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[Float])(implicit ev: Numeric[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [U](inv: org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[U])(implicit constraint: org.scalactic.CanEqual[Float,U])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (notWord: org.scalatest.words.NotWord)org.scalatest.words.ResultOfNotWordForAny[Float] <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_], TYPECLASS2[_]](rightMatcherFactory2: org.scalatest.matchers.MatcherFactory2[Float,TYPECLASS1,TYPECLASS2])(implicit typeClass1: TYPECLASS1[Float], implicit typeClass2: TYPECLASS2[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  [TYPECLASS1[_]](rightMatcherFactory1: org.scalatest.matchers.MatcherFactory1[Float,TYPECLASS1])(implicit typeClass1: TYPECLASS1[Float])org.scalatest.Assertion <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (rightMatcherX1: org.scalatest.matchers.Matcher[Float])org.scalatest.Assertion[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (org.scalatest.matchers.Matcher[Double])[0m
[0m[[0m[31merror[0m] [0m[0m    SpaceAge.onNeptune(8.210123456E9) should be (1.58 +- 0.01)[0m
[0m[[0m[31merror[0m] [0m[0m                                      ^[0m
[0m[[0m[31merror[0m] [0m[0m8 errors found[0m
